## Assignment Part-1
Q1. Why do we call Python as a general purpose and high-level programming language?
-->General purpose language: because it can be used to create different programs and isn't specialized for any specific problems.
High level language: it's easy for humans to understand.
Q2. Why is Python called a dynamically typed language?
-->Features like no problem in declaring data type of variable and makes python dynamically typed language.
Q3. List some pros and cons of Python programming language?
-->Pros: 1. vast library support 2. Dynamically typed 3. Free and open source. 
Cons : 1. Slow speed 2.Not memory efficient      3. Weak in mobile computing.
Q4. In what all domains can we use Python?
-->1. Machine learning 2. Data analytics and Data Visualisation 3. Web development 4. Embedded systems etc..
Q5. What are variable and how can we declare them?
-->Variable is symbolic name that is reference of an object. We can create variable by assigning value to it.
Q6. How can we take an input from the user in Python?
-->We can input() function to take input from use 
Q7. What is the default datatype of the value that has been taken as an input using input() function?
-->default datatype of value from input() is string.
Q8. What is type casting?
-->type casting is conversion of datatype of variable into another datatype..
Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?
-->yes, we can use split() function and take multiple input from users.
Q10. What are keywords?
--> keywords are reserved words that can't be used as names of variables or functions or class.
Q11. Can we use keywords as a variable? Support your answer with reason.
-->No, because those are reserved words that already have specific functionality.
Q12. What is indentation? What's the use of indentaion in Python?
-->Indentation is spaces before code of line. It indicates block of code in python.
Q13. How can we throw some output in Python?
--> we can print function to throw output.
Q14. What are operators in Python?
-->special symbols that are used for computation.
Q15. What is difference between / and // operators?
--> / is normal division which returns float value. And // is floor division which return integer value.
Q16. Write a code that gives following as an output.
```
iNeuroniNeuroniNeuroniNeuron
```
--> for I in range(4):
       print("iNeuron", end="")
Q17. Write a code to take a number as an input from the user and check if the number is odd or even.
--> if(n%2==0): 
     return "even"
   else:
     return "odd"

Q18. What are boolean operator?
-->boolean operators are operators which returns boolean values.
Q19. What will the output of the following?
```
1 or 0 - True

0 and 0 - Falss

True and False and True

1 or 0 or 0 - True
```

Q20. What are conditional statements in Python?
--> to handle conditions in program.. Conditional statements are used..
Q21. What is use of 'if', 'elif' and 'else' keywords?
--> by using conditional statements we can organize our program such that it performs some operation only if certain conditions are true or false.
Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".
--> age=int(input())
if age>=18: 
   Print(" I can vote")
else:
   print("i can't vote")
Q23. Write a code that displays the sum of all the even numbers from the given list.
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
-->sum=0
 for I in numbers: 
     if I%2==0:
         sum+=I
 print(sum)

Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.
--> a, b, c=input().split()
a, b, c=int(a), int(b), int(c)
if a>b : 
    if b>c: 
        print("a is greatest")
    else:
        print("c is greatest")
else:
    if b>c:
        print("b is greatest")
    else: 
        print("c is greatest")
Q25. Write a program to display only those numbers from a list that satisfy the following conditions

- The number must be divisible by five

- If the number is greater than 150, then skip it and move to the next number

- If the number is greater than 500, then stop the loop
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
for I in numbers: 
    if I>500:
        break
    else if I >150:
        continue
    else if I%5==0:
        print(I)
    else: 
        pass    
Q26. What is a string? How can we declare string in Python?
--> string is a collection of characters that are stored in sequence. We declare string by assigning a value in between "" to a variable. 
Q27. How can we access the string using its index?
-->we can access string using it's index through bracket notation.
Q28. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "iNeuron"
```
--> string[9:16]
Q29. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "norueNi"
```
string[:-8:-1]
Q30. Resverse the string given in the above question.
string[::-1]
Q31. How can you delete entire string at once?
--> del keyword or assign string to empty string ""
Q32. What is escape sequence?
-->it is a backslash(\) followed by the character to be inserted.
Q33. How can you print the below string?
```
'iNeuron's Big Data Course'
```
print(```'iNeuron's Big Data Course'```)

Q34. What is a list in Python?
-->list is an ordered sequence of elements.
Q35. How can you create a list in Python?
-->we can create a list by placing elements in between []
Q36. How can we access the elements in a list?
--> we can access the elements in a list using their indexes.
Q37. Write a code to access the word "iNeuron" from the given list.
```
lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
``` 
let[4][2]
Q38. Take a list as an input from the user and find the length of the list.
a=input().split()
print(len(a))
Q39. Add the word "Big" in the 3rd index of the given list.
```
lst = ["Welcome", "to", "Data", "course"]
```
--> last[3]="Big"
Q40. What is a tuple? How is it different from list?
--> tuples are ordered sequence of elements. Tuple are immutable and lists are mutable.
Q41. How can you create a tuple in Python?
--> we can create a tuple by placing values between ()
Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.
--> we can't add to tuple because of it's immutable property.
Q43. Can two tuple be appended. If yes, write a code for it. If not, why?
--> a=(1,2)
b=(3,4)
c=a+b
Q44. Take a tuple as an input and print the count of elements in it.
--> a=tuple(input().split())
print(len(a))
Q45. What are sets in Python?
-->sets are multiple unique elements stored in a single variable.
Q46. How can you create a set?
-->we can create a set using set()
Q47. Create a set and add "iNeuron" in your set.
-->st=set()
st.add("iNeuron")
Q48. Try to add multiple values using add() function.
-->st.add("batch","2.0")  - error
Q49. How is update() different from add()?
--> we can add multiple elements. to a set using update() but can't using add(). By using add() we can add single elements
Q50. What is clear() in sets?
--> makes a list empty
Q51. What is frozen set?
-->frozenset are immutable sets
Q52. How is frozen set different from set?
--> sets are mutable and frozen sets are immutable.
Q53. What is union() in sets? Explain via code.
-->it is a function which returns set that consists of all elements of two sets.
a={1,2,3} b={3,4,5} print(a.union(b)) --{1,2,3,4,5}
Q54. What is intersection() in sets? Explain via code.
--> it creates set that contains common elements in both the sets.
print(a.intersection(b)) -- {3}

Q55. What is dictionary in Python?
-->dictionary is ordered in key-value pairs and Changeable and do not allow duplicate keys.
Q56. How is dictionary different from all other data structures.
-->dictionary stores date in the order of key value pairs
Q57. How can we delare a dictionary in Python?
-->dictt={}
Q58. What will the output of the following?
```
var = {}
print(type(var))
```
--> dictionary 
Q59. How can we add an element in a dictionary?
-->we can add by assigning key and value to dictionary.
Q60. Create a dictionary and access all the values in that dictionary.
-->dct={'a':1,'b':2,'c':3}
for k, v in dct.items():
    print(k,v)
Q61. Create a nested dictionary and access all the element in the inner dictionary.
-->dct={'a':1,'b':2,'c':3,'inner':{'h':8,'g':7,'i':9}
for k, v in dct['inner'].items():
    print(k, v)
Q62. What is the use of get() function?
-->by using get function we can get a value of a key
Q63. What is the use of items() function?
-->it returns list of tuples of key-value pair.
Q64. What is the use of pop() function?
-->pop removes specified key from dictionary.
Q65. What is the use of popitems() function?
-->popitems() removes key-value pair from dictionary.
Q66. What is the use of keys() function?
--> keys() returns keys of dictionary
Q67. What is the use of values() function?
--> values() returns values present in dictionary.
Q68. What are loops in Python?
--> loops are iterating till condition is satisfied.
Q69. How many type of loop are there in Python?
--> three types of loops : for and while and do while.
Q70. What is the difference between for and while loops?
--> when we know how many times loop should run - for loop is used and when we don't know - while loop is used.
Q71. What is the use of continue statement?
--> it skips one iteration of a loop
Q72. What is the use of break statement?
--> it breaks the loop
Q73. What is the use of pass statement?
--> in our conditional if we want to do nothing then pass is used
Q74. What is the use of range() function?
--> range generates values depending on range provided.
Q75. How can you loop over a dictionary?
-->we can loop over dictionary using .items()

### Coding problems
Q76. Write a Python program to find the factorial of a given number.
--> a=int(input())
fact=1
for I in range(a):
    fact*=I
print(fact)
Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (P*R*T)/100
-->p, t, r=input().split()
p,t, r=int(p), int(t), int(r)
si= (p*t*r)/100
print(si)
Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.
--> p, t, r=input().split()
p, t, r=int(p), int(t), int(r)
a=pow(p*(1+(r/100)), t)
Q79. Write a Python program to check if a number is prime or not.
-->for I in range(int(sqrt(n))):
    if n%I==0:
        return "not prime"
.  return "prime"
Q80. Write a Python program to check Armstrong Number.
-->num=int(input())
  Order=len(num)
  temp=num
  sum=0
while(temp>0):
    dct=temp%10
    sum+=dct**order
    temp=temp/10
print(sum==num)
Q81. Write a Python program to find the n-th Fibonacci Number.
--> if n==1:
    return 0
   elif n==2 or n==3:
    return 1
   else:
     a, b=0,1
      c=a+b  
    for I in range(2,n):
        a, b=b, c
        c=a+b
   print(c)
Q82. Write a Python program to interchange the first and last element in a list.
-->lst=[1,2,3,4]
lst[0], lst[-1]=lst[-1], lst[0]
print(lst)
Q83. Write a Python program to swap two elements in a list.
-->lst[0], lst[-1]=lst[-1], lst[0]
Q84. Write a Python program to find N largest element from a list.
-->lst=[3,4,1,5]
lst.sort()
print(lst[-N:]
Q85. Write a Python program to find cumulative sum of a list.
--> sum=0
 for I in lst:
    sum+=I
Q86. Write a Python program to check if a string is palindrome or not.
-->return string[:]==string[::-1]
Q87. Write a Python program to remove i'th element from a string.
--> string.replace(string[i],"")
Q88. Write a Python program to check if a substring is present in a given string.
--> return (substring in string)
Q89. Write a Python program to find words which are greater than given length k.
--> k=3
for I in range(len(str)-1):
     St=""
     for J in range(i, len(str)):
          St+=str[J]
          if len(St)>k:
              print(St)
Q90. Write a Python program to extract unquire dictionary values.
-->print(set(list(dct.values)))
Q91. Write a Python program to merge two dictionary.
-->print(dict1 | dict2)
Q92. Write a Python program to convert a list of tuples into dictionary.
```
Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}
```
dct={}
for tup in list:
    dct[tup[0]]=tup[1]
print(dct)
Q93. Write a Python program to create a list of tuples from given list having number and its cube in each tuple.
```
Input: list = [9, 5, 6]
Output: [(9, 729), (5, 125), (6, 216)]
```
lst=[]
for I in list:
   a=(I, I**3)
   lst.append(a)

Q94. Write a Python program to get all combinations of 2 tuples.
```
Input : test_tuple1 = (7, 2), test_tuple2 = (7, 8)
Output : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]
```
-->lst=[]
 for I in test_tuple1:
      for j in test_tuple2:
             a=(I, J)
             lst.append(a)
print(lst)
      

Q95. Write a Python program to sort a list of tuples by second item.
```
Input : [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
Output : [('Geeks', 8), ('for', 24), ('Geeks', 30)]
```
--> lst[:][1].sort()

Q96. Write a python program to print below pattern.
```
* 
* * 
* * * 
* * * * 
* * * * * 
```

--> for I in range(5):
     for j in range(I+1):
         print("*")
Q97. Write a python program to print below pattern.
```
    *
   **
  ***
 ****
*****
```
n=5
for I in range(n):
    for j in range(n):
         if j>=(n-(I+1)):
             print("*")
         else: 
             print(" ")

Q98. Write a python program to print below pattern.
```
    * 
   * * 
  * * * 
 * * * * 
* * * * * 
```

Q99. Write a python program to print below pattern.
```
1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5
```
for I in range(5):
    for j in range(i+1):
        print(j)
Q100. Write a python program to print below pattern.
```
A 
B B 
C C C 
D D D D 
E E E E E 
```

a='A'
for I in range(5):
    for J in range(I):
        print(chr(ord(a)+I))
